import numpy as np

# a = np.arange(10)
# print(a)
# print(type(a))
# print(a.ndim)
# print(a.shape)
# print(a.size)
# b = np.arange(9).reshape(3,3)
# print(b)
# print(b.shape)
# print(b.ndim) # tedad ab'ad matrix
# c = np.array([(1,3,4),(5,6,7.5)],dtype=str)
# print(c)
# print(np.where(c>5,c,0))
# d = np.zeros([2,2,3],dtype=int)
# print(d)
# d = np.ones([2,2,3],dtype=int)
# print(d)
# d = np.arange(1,11,0.1)
# a = range(1,11,2)
# print(d)
# print(list(a))
# e = np.linspace(1,10)
# r = np.random.random((2,2))
# print(r)
# print(r.T)
# a = np.arange(1, 10).reshape(3, 3)
# print(a)
# print(a[0])
# print(a.T[0])
# print(a[1][2])
# print(a.cumsum(axis=1))
# print(a.cumsum(axis=0))
# print(a.cumsum())
# dt = [('name', 'S10'), ('grad_year', int)]
# values = [('armin', 2000), ('ali', 2010)]
# arr = np.array(values, dtype=dt)
# print(arr)
# print(np.sort(arr, order='name'))
# print(np.sort(arr, order=['name', 'grad_year']))
# print(np.sort(arr, order=['grad_year', 'name']))
# l1 = [1,2,3,4,5,6,7,8]
# l2 = [9,6,5]
# a1 = np.array(l1)
# a2 = np.array(l2)
# print(a1*a2)
# print("armin %0.5f"%10.5)
# print(a1[1:7:2])
# print(a1[np.array([3,1,2])])
# def func (x,y):
#     return 10*x + y
# arr = np.fromfunction(func,[3,2],dtype=int)
# print(len(arr))
# # print(arr[:,1])
# arr.resize(2,3) # taqir khode array
# b = arr.ravel()
# print("b = ",b)
# print(arr)
# def func (z,x,y):
#     return 10*x + y + 100*z
# arr = np.fromfunction(func,[2,2,3],dtype=int)
# print(arr)
# arr = np.arange(9)
# print(arr)
# b = np.vsplit(arr,3)
# print(b)
# print(b[1])
a = [[1,2,3],[3,4,5]]
# print('a*2 =',a*2)
arr = np.array(a)
# print('arr*2 =',arr*2)
b = np.array([3,4,5])
print(arr[:,np.newaxis])
print(arr.T)
print(b.T)